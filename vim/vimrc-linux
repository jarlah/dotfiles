" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" Turn off filetype to ensure Vundle executes properly
filetype off

" ================ General Config ====================
" set number                      " Line numbers are good
set ruler                       " Show cursor position in status instead of full line numbers
set backspace=indent,eol,start  " Allow backspace in insert mode over autoindent, line breaks, and start of insert action
set history=1000                " Store lots of :cmdline history (default is 20)
set showcmd                     " Show incomplete cmds down the bottom
set showmode                    " Show current mode down the bottom
" set gcr=a:blinkon0              " Disable cursor blink
set visualbell                  " No sounds
set autoread                    " Reload files changed outside vim
set mouse=a
set confirm                     " Instead of failing cmd from no save, ask to save
" set ruler                     " show cursor postion in status
set wildmenu                    " Better command line completion
set wildmode=list:longest       " Only complete up to the point of ambiguity (i.e. like a shell)
set scrolloff=3                 " Show lines of context around the cursor when scrolling
" Store temp files in specific loctions
set backupdir=~/.vim-tmp,~/.tmp,/tmp
set directory=~/.vim-tmp,~/.tmp,/tmp

" =============== Search Settings ===================
set hlsearch                    " Highlight searches (Use <C-L> to temporarily disable)
set incsearch                   " highlight incrementally as they are typed
set ignorecase                  " Ignore case when searching
set smartcase                   " Except when using capital letters
" Remap <C-L> (redraw screen) to disable search highlight until next search
nnoremap <C-L> :nohl<CR><C-L>

" ============== Copy / Paste ========================
" set pastetoggle=<F10>           " Toggle between paste/nopaste with <F10>
set paste                       " Turn on paste mode always

" Make Y act like D and C, i.e. yank till EOL rather than yy
" map Y y$

" ================ Indentation ======================
set autoindent
set smartindent
set smarttab
set shiftwidth=4
set softtabstop=4
" set tabstop=4                 " Use hard tabs of 4 spaces
set expandtab

" Buffers can exist in the background without being in a window.
" http://items.sjbach.com/319/configuring-vim-right
set hidden

" ================ Vundle ===========================
" Set the runtime path to include Vundle and it's init
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" Let Vundle manage Vundle (required)
Plugin 'gmarik/Vundle.vim'

" Vundle Plugins
Plugin 'tpope/vim-fugitive'
Plugin 'kien/ctrlp.vim'
Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown'
Plugin 'sjl/gundo.vim'
Plugin 'nvie/vim-flake8'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'wting/rust.vim'
Plugin 'Valloric/YouCompleteMe'

" Done with Vundle Plugins
call vundle#end()

" This makes vim act like all other editors, buffers can
" exist in the background without being in a window.
" http://items.sjbach.com/319/configuring-vim-right
set hidden

" ============== Pathogen Initialization =============
" This loads all the plugins in ~/.vim/bundle
" using ~/.vim/autoload/pathogen.vim
" execute pathogen#infect()

" ============== Omnicomplete Support ===============
" This adds the autocomplete function
set omnifunc=syntaxcomplete#Complete

" ================ Folds ============================
set foldmethod=indent   "fold based on indent
set foldnestmax=10      "deepest fold is 3 levels
set nofoldenable        "dont fold by default

filetype plugin indent on

" This must come AFTER Vundle or it will not detect all filetypes properly
filetype on
syntax on

" ============ Solarized Colors ================
syntax enable
set background=dark

" Display tabs and trailing spaces visually
set list listchars=tab:\ \ ,trail:·

set nowrap       " Don't wrap lines
" set linebreak    "Wrap lines at convenient points

" =============== Mappings  ===========================
nmap <F4> :TagbarToggle<CR>     " Use F8 to open Tagbar
nmap <F7> :NERDTree<CR>         " Use F7 to open NERDTree
" inoremap { {}<Esc>i	
" inoremap ( ()<Esc>i
" inoremap [ []<Esc>i
" inoremap ] <Esc>la
" inoremap ) <Esc>la
" inoremap } <Esc>la

" Remap the leader key to something more convienient
let mapleader = ","

" Enable faster viewport scrolling
nnoremap <C-e> 3<C-e>
nnoremap <C-y> 3<C-y>

" gundo
nnoremap <F5> :GundoToggle<CR>

" Working with Splits
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Catch trailing whitespace when desired (<leader>s)
set listchars=tab:>-,trail:·,eol:$
nmap <silent> <leader>s :set nolist!<CR>

" =============== Go ================================
" These settings are for Go-lang specific features
" autocmd FileType go autocmd BufWritePre <buffer> Fmt	" gofmt code on save
" autocmd FileType go compiler go     " Always enable compiler plugin

" ================ Rust ============================
" These settings are for Rust-lang specific features
" and Racer auto-complete
let g:racer_cmd = "~/.bin/racer"
let $RUST_SRC_PATH="/usr/local/src/rust/src"

" =============== Python ===========================
" These settings are for Python and Flake8 settings
nnoremap <F8> :call Flake8()<CR>
autocmd FileType python map <buffer> <F8> :call Flake8()<CR>
